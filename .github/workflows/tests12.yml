name: tests12

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  testsuite:
    name: all tests
    runs-on: ubuntu-22.04
    strategy:
      # This prevents cancellation of matrix job runs, if one or more already failed
      # and let the remaining matrix jobs be executed anyway.
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2', '8.3' ]
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Display branch name
        run: |
          echo "Current branch: ${{ steps.extract_branch.outputs.branch }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -s composerUpdate

      - name: Composer validate
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -s composerValidate

      - name: Lint PHP
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -s lint

      - name: CGL
        run: Build/Scripts/runTests.sh -t 12 -n -p ${{ matrix.php }} -s cgl

      - name: phpstan
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -s phpstan -e "--error-format=github"

      - name: Unit Tests
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -s unit

      - name: Functional Tests with mariadb and mysqli
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -d mariadb -a mysqli -s functional

      - name: Functional Tests with mariadb and pdo_mysql
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -d mariadb -a pdo_mysql -s functional

      - name: Functional Tests with mysql and mysqli
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -d mysql -a mysqli -s functional

      - name: Functional Tests with mysql and pdo_mysql
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -d mysql -a pdo_mysql -s functional

      - name: Functional Tests with postgres
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -d postgres -s functional

      - name: Functional Tests with sqlite
        run: Build/Scripts/runTests.sh -t 12 -p ${{ matrix.php }} -d sqlite -s functional

